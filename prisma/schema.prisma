// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Bolla {
  id        Int             @id @default(autoincrement())
  nucleo    Nucleo          @relation(fields: [nucleoId], references: [id], onDelete: Cascade)
  data      DateTime
  note      String?
  alimenti  BollaAlimento[]
  nucleoId  Int          
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
}

model BollaAlimento {
  id         Int      @id @default(autoincrement())
  alimento   Alimento @relation(fields: [alimentoId], references: [id], onDelete: Cascade)
  bolla      Bolla    @relation(fields: [bollaId], references: [id], onDelete: Cascade)
  quantita   Float
  alimentoId Int
  bollaId    Int
  note       String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([bollaId, alimentoId])
}

model Nucleo {
  id         Int      @id @default(autoincrement())
  nome       String
  cognome    String
  isee       Float?
  componenti Int
  bambini    Int
  cellulare  String?
  indirizzo  String?
  citta      String?
  servibile  Boolean  @default(true)
  note       String?
  bolle      Bolla[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Alimento {
  id            Int              @id @default(autoincrement())
  nome          String
  unita         String           @default("pz")
  scadenza      DateTime?
  distribuibile Boolean          @default(true)
  note          String?
  bolle         BollaAlimento[]
  carichi       CaricoAlimento[]
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
}

model CaricoAlimento {
  id         Int      @id @default(autoincrement())
  alimento   Alimento @relation(fields: [alimentoId], references: [id], onDelete: Cascade)
  carico     Carico   @relation(fields: [caricoId], references: [id], onDelete: Cascade)
  quantita   Float
  alimentoId Int
  caricoId   Int
  note       String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([caricoId, alimentoId])
}

model Carico {
  id        Int              @id @default(autoincrement())
  data      DateTime
  note      String?
  alimenti  CaricoAlimento[]
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt
}
